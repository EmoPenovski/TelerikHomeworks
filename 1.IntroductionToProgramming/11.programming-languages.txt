1. PHP

PHP is a server-side scripting language designed for web development but also used as a general-purpose programming language.
The major differences between PHP and C# is that PHP is a dynamic and interpreted while C# is static and needs to be compiled.
		Strengths: Web programming, good documentation
		Weaknesses: Inconsistent syntax, too many ways to do the same 
			    things,a history of bizarre security decisions

2. Python

Python is a widely used general-purpose, high-level programming language. Its design philosophy emphasizes code readability, 
and its syntax allows programmers to express concepts in fewer lines of code than would be possible in languages such as C++ or Java.

Python supports multiple programming paradigms, including object-oriented, imperative and functional programming or procedural styles. 
It features a dynamic type system and automatic memory management

		Strengths:Python projects are often open-source, web-based, and/or cross-platform. Python has a larger user base on mac and unix-based platforms.
			  C# projects are often proprietary, windows-based applications. There's very few non-windows C# projects.
                Weaknesses:C# is better than Python in: standard library, language features, development process and tools,
		  	  performance, language evolution speed.

3. Java

Java is a class-based, object-oriented language specifically designed to have as few implementation dependencies as possible.
Once the code is written it can be run on any platform without being recompiled. 
Java applications are compiled to bytecode that can run on any Java virtual machine.
Java and C# are similar, both are class-based and object-oriented, in both all objects are references, 
both use garbage collection, have built-in Unicode support, and only allow single inheritance.
The main difference is that Java can be run on any operating system, while C# typically requires Windows and the .NET framework.
There are also mostly minor differences in keywords and syntax and in the use of some classes, exception handling etc.
		Strengths: WORA (Write once, run anywhere), popularity
		Weaknesses: Slower than natively compiled languages

4. C

C is a high-level and general purpose programming language that is ideal for developing firmware or portable applications. 
Originally intended for writing system software, C was developed at Bell Labs by Dennis Ritchie for the Unix Operating System (OS) in the early 1970s.
Ranked among the most widely used languages, C has a compiler for most computer systems and influenced many popular languages - 
C++, D, Java, JavaScript, C#, Objective-C, Perl, PHP, Python, etc.

Both C and C++ present a lower level of abstraction that provides a breadth of access to underlying machine functionality 
that are not necessarily exposed with other languages. C# provides a managed memory model that adds a higher level of abstraction
that adds convenience and improves development times, but complicates access to lower level APIs and makes specialized 
performance requirements problematic.

                Strengths:You get to micromanage everything; it is exceedingly low level.
			  There is no built-in memory management.
		WeaknessesThe syntax of C# is much simpler and prone than C/C++ and is easier for learning.


C++

It is a compiled, multi-paradigm and object-oriented language
written as an update to C in 1979. Despite it's age, C++ is used to
create a wide array of applications from games to office suites.
C++ Additional:
            	Strengths:  Speed
		Weaknesses: Older & considered clumsy if compared with Java




